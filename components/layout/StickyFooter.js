import Link from "next/link";
import { useRouter } from "next/router";
import { motion } from "framer-motion";
import { usePageTransition } from "@/hooks/usePageTransition";

export default function StickFooter({}) {
  const router = useRouter();
  const { navigateWithTransition, isTransitioning } = usePageTransition();

  const handleNavigation = (e, path) => {
    e.preventDefault();
    if (isTransitioning) return;
    
    // Determine transition direction based on current path
    let direction = 'left';
    const currentPath = router.pathname;
    
    // Define navigation patterns for smooth transitions
    const navigationMap = {
      '/': { '/chats/bidding': 'right', '/personal-leads': 'right', '/chats/packages': 'right', '/settings': 'right' },
      '/chats/bidding': { '/': 'left', '/personal-leads': 'right', '/chats/packages': 'right', '/settings': 'right' },
      '/personal-leads': { '/': 'left', '/chats/bidding': 'left', '/chats/packages': 'right', '/settings': 'right' },
      '/chats/packages': { '/': 'left', '/chats/bidding': 'left', '/personal-leads': 'left', '/settings': 'right' },
      '/settings': { '/': 'left', '/chats/bidding': 'left', '/personal-leads': 'left', '/chats/packages': 'left' }
    };
    
    direction = navigationMap[currentPath]?.[path] || 'left';
    navigateWithTransition(path, direction);
  };

  const navItems = [
    { href: "/", icon: "svg", label: "Dashboard", svgContent: router.pathname === "/" ? (
      <path d="M21.1795 8.12035C21.1795 9.1517 21.5403 9.95535 22.262 10.5313C22.9705 11.1073 24.2236 11.7033 26.0212 12.3195C27.8188 12.9356 29.2884 13.5317 30.43 14.1076C34.1433 15.9694 36 18.5278 36 21.7826C36 23.4033 35.5407 24.8298 34.6222 26.0621C33.6906 27.3077 32.3785 28.2721 30.6859 28.9552C28.9932 29.6517 27.0906 30 24.9781 30C22.918 30 21.0745 29.625 19.4475 28.8749C18.6481 28.5093 17.936 28.0674 17.3112 27.5491C16.892 27.8475 16.4407 28.1153 15.9572 28.3525C14.2646 29.1829 12.2636 29.5981 9.95425 29.5981C7.16596 29.5981 5.0313 28.8531 3.02375 27.0046C1.01618 25.1562 -0.522684 22.062 0.167489 18.5105C0.857658 14.959 4.6928 11.4778 7.15578 11.2232C9.61871 10.9686 11.1485 11.7607 11.1485 11.7607C11.1485 11.7607 9.03935 8.82277 6.40985 9.566C1.62342 10.9189 1.27597 18.2572 5.00332 21.8758C6.8178 23.6374 7.73426 24.1734 9.95425 24.1734C11.3844 24.1734 12.467 23.7716 13.2017 22.9679C13.9365 22.1642 14.3039 20.8583 14.3039 19.05V14.2211C15.4471 15.628 17.0133 16.8049 18.9133 17.7578C19.5911 18.0997 20.3588 18.4407 21.2123 18.7817V19.0902C21.2123 19.7243 21.1454 20.3544 21.1454 20.9352C21.1454 22.1273 21.5206 23.0349 22.2423 23.6913C22.9508 24.3476 23.9152 24.6758 25.1355 24.6758C26.3689 24.6758 27.3465 24.3944 28.0681 23.8319C28.7767 23.2827 29.131 22.5795 29.131 21.7223C29.131 20.9722 28.7373 20.2891 27.95 19.673C27.1628 19.0702 25.7785 18.4407 23.7971 17.7843C21.8158 17.1414 20.1888 16.4449 18.916 15.6948C15.8194 13.8732 14.2711 11.3618 14.2711 8.16051C14.2711 5.60222 15.6523 3.28161 17.5418 1.82163C23.7971 -2.27704 33.1819 1.82163 33.1819 1.82163C33.1819 1.82163 25.0657 2.86105 22.262 5.79105C21.6402 6.44087 21.1795 7.20952 21.1795 8.12035Z" fill="#840032"/>
    ) : (
      <path d="M17.8301 2.22949C20.7986 0.292467 24.5479 0.274013 27.627 0.77832C29.0313 1.00834 30.2758 1.34607 31.2129 1.64258C30.4806 1.78349 29.5913 1.97505 28.6465 2.22363C27.4417 2.54063 26.1367 2.95379 24.9492 3.47754C23.7686 3.99828 22.6669 4.64431 21.9004 5.44531C21.2336 6.14222 20.6798 7.02872 20.6797 8.12012C20.6797 9.28137 21.0937 10.2354 21.9463 10.918V10.9189C22.7275 11.554 24.053 12.1728 25.8594 12.792C27.6447 13.4039 29.0912 13.9917 30.2051 14.5537L30.2061 14.5547C33.8055 16.3595 35.4999 18.7718 35.5 21.7822C35.5 23.2065 35.1237 24.4561 34.376 25.5469L34.2217 25.7627C33.3538 26.9231 32.1215 27.8364 30.499 28.4912L30.4951 28.4932C28.8716 29.1611 27.0353 29.5 24.9785 29.5C22.9801 29.5 21.2094 29.1364 19.6572 28.4209L19.6553 28.4199C18.8928 28.0712 18.2191 27.652 17.6309 27.1641L17.335 26.9189L17.0215 27.1416C16.6254 27.4235 16.1974 27.6775 15.7373 27.9033C14.1269 28.6934 12.2039 29.0977 9.9541 29.0977C7.27728 29.0976 5.26765 28.3911 3.3623 26.6367C1.45606 24.8816 0.00745471 21.9541 0.658203 18.6055C0.855753 17.5893 1.33631 16.5634 1.98242 15.6211C1.97795 17.9898 2.87125 20.5024 4.65527 22.2344C5.56636 23.1189 6.29796 23.7439 7.10938 24.1357C7.93527 24.5346 8.8024 24.6738 9.9541 24.6738C11.4781 24.6738 12.7135 24.2425 13.5703 23.3057C14.4299 22.3655 14.8037 20.9058 14.8037 19.0498V15.5049C15.8752 16.5527 17.1868 17.4514 18.6895 18.2051V18.2041C19.2969 18.5105 19.9723 18.8135 20.7109 19.1162C20.7101 19.4091 20.696 19.7038 20.6797 20.0059C20.6631 20.3118 20.6455 20.6291 20.6455 20.9355C20.6456 22.2424 21.0627 23.2943 21.9062 24.0615V24.0605C22.7294 24.8213 23.8257 25.1758 25.1357 25.1758C26.4419 25.1757 27.5393 24.877 28.375 24.2256C29.1984 23.5869 29.6308 22.7419 29.6309 21.7227C29.6309 20.771 29.1228 19.9563 28.2578 19.2793L28.2539 19.2764L28.0859 19.1533C27.2122 18.5382 25.8189 17.9273 23.9541 17.3096L23.9512 17.3086C21.9918 16.6728 20.4013 15.9894 19.1699 15.2637C16.2036 13.5187 14.7715 11.1597 14.7715 8.16016C14.7716 5.7904 16.0497 3.61258 17.8301 2.22949ZM6.5459 10.0469C7.63055 9.74035 8.64131 10.175 9.44043 10.7676C8.79646 10.6742 8.00907 10.6321 7.10449 10.7256C6.07498 10.832 4.89464 11.4175 3.79004 12.2695C4.38629 11.2017 5.30714 10.397 6.5459 10.0469Z" fill="white" stroke="#840032"/>
    ), className: "w-9 h-7 mt-1" },
    { href: "/chats/bidding", icon: "svg", label: "Bids", svgContent: router.pathname === "/chats/bidding" ? (
      <path d="M1.8877 0.5H10.3828C11.1807 0.5 11.9721 0.665991 12.7109 0.990234C13.4498 1.31451 14.1229 1.79127 14.6914 2.39355C15.2599 2.99584 15.7123 3.71234 16.0215 4.50293C16.292 5.19478 16.4477 5.93115 16.4824 6.67871L16.4902 7C16.4879 7.86951 16.3217 8.72928 16.002 9.52832C15.6821 10.3275 15.2154 11.0491 14.6309 11.6514L14.291 12.001L14.6318 12.3496C15.508 13.2464 16.1137 14.404 16.3672 15.6748C16.6207 16.9459 16.5092 18.2687 16.0479 19.4707C15.5865 20.6723 14.7977 21.6958 13.7881 22.4121C12.7789 23.1281 11.5933 23.5056 10.3848 23.5H1.8877C1.52946 23.5 1.17971 23.3494 0.916992 23.0713C0.653295 22.7919 0.500015 22.4068 0.5 22V2C0.5 1.59316 0.653282 1.20809 0.916992 0.928711C1.17971 0.650579 1.52945 0.500031 1.8877 0.5ZM3.27539 20.5H10.3828C11.276 20.5 12.1267 20.124 12.749 19.4648C13.3704 18.8066 13.7148 17.9192 13.7148 17C13.7148 16.0808 13.3704 15.1935 12.749 14.5352C12.1267 13.8759 11.276 13.5 10.3828 13.5H3.27539V20.5ZM3.27539 10.5H10.3828C11.276 10.5 12.1267 10.1241 12.749 9.46484C13.3704 8.80655 13.7148 7.91923 13.7148 7C13.7148 6.08076 13.3704 5.19345 12.749 4.53516C12.1267 3.87593 11.276 3.5 10.3828 3.5H3.27539V10.5Z" fill="#2B3F6C" stroke="#2B3F6C"/>
    ) : (
      <path d="M1.8877 0.5H10.3828C11.1807 0.5 11.9721 0.665991 12.7109 0.990234C13.4498 1.31451 14.1229 1.79127 14.6914 2.39355C15.2599 2.99584 15.7123 3.71234 16.0215 4.50293C16.292 5.19478 16.4477 5.93115 16.4824 6.67871L16.4902 7C16.4879 7.86951 16.3217 8.72928 16.002 9.52832C15.6821 10.3275 15.2154 11.0491 14.6309 11.6514L14.291 12.001L14.6318 12.3496C15.508 13.2464 16.1137 14.404 16.3672 15.6748C16.6207 16.9459 16.5092 18.2687 16.0479 19.4707C15.5865 20.6723 14.7977 21.6958 13.7881 22.4121C12.7789 23.1281 11.5933 23.5056 10.3848 23.5H1.8877C1.52946 23.5 1.17971 23.3494 0.916992 23.0713C0.653295 22.7919 0.500015 22.4068 0.5 22V2C0.5 1.59316 0.653282 1.20809 0.916992 0.928711C1.17971 0.650579 1.52945 0.500031 1.8877 0.5ZM3.27539 20.5H10.3828C11.276 20.5 12.1267 20.124 12.749 19.4648C13.3704 18.8066 13.7148 17.9192 13.7148 17C13.7148 16.0808 13.3704 15.1935 12.749 14.5352C12.1267 13.8759 11.276 13.5 10.3828 13.5H3.27539V20.5ZM3.27539 10.5H10.3828C11.276 10.5 12.1267 10.1241 12.749 9.46484C13.3704 8.80655 13.7148 7.91923 13.7148 7C13.7148 6.08076 13.3704 5.19345 12.749 4.53516C12.1267 3.87593 11.276 3.5 10.3828 3.5H3.27539V10.5Z" fill="white" stroke="#2B3F6C"/>
    ), className: "w-5 h-7 mt-1" },
    { href: "/personal-leads", icon: "svg", label: "Create", svgContent: <><circle cx="20" cy="20" r="18" fill="white" stroke="#2B3F6C" strokeWidth="2"/><path d="M20 12v16M12 20h16" stroke="#2B3F6C" strokeWidth="3" strokeLinecap="round"/></>, className: "w-12 h-12", specialClass: "relative -top-8 z-50" },
    { href: "/chats/packages", icon: "svg", label: "Packages", svgContent: <text x="12" y="18" textAnchor="middle" fontSize="18" fontWeight="bold" fill="black">P</text>, className: "w-10 h-10" },
    { href: "/settings", icon: "svg", label: "Settings", svgContent: <><path d="M12 15a3 3 0 100-6 3 3 0 000 6z" stroke="black" strokeWidth="2"/><path d="M19.4 15a1.65 1.65 0 00.33 1.82l.06.06a2 2 0 010 2.83 2 2 0 01-2.83 0l-.06-.06a1.65 1.65 0 00-1.82-.33 1.65 1.65 0 00-1 1.51V21a2 2 0 01-2 2 2 2 0 01-2-2v-.09A1.65 1.65 0 009 19.4a1.65 1.65 0 00-1.82.33l-.06.06a2 2 0 01-2.83 0 2 2 0 010-2.83l.06-.06a1.65 1.65 0 00.33-1.82 1.65 1.65 0 00-1.51-1H3a2 2 0 01-2-2 2 2 0 012-2h.09A1.65 1.65 0 004.6 9a1.65 1.65 0 00-.33-1.82l-.06-.06a2 2 0 010-2.83 2 2 0 012.83 0l.06.06a1.65 1.65 0 001.82.33H9a1.65 1.65 0 001-1.51V3a2 2 0 012-2 2 2 0 012 2v.09a1.65 1.65 0 001 1.51 1.65 1.65 0 001.82-.33l.06-.06a2 2 0 012.83 0 2 2 0 010 2.83l-.06.06a1.65 1.65 0 00-.33 1.82V9a1.65 1.65 0 001.51 1H21a2 2 0 012 2 2 2 0 01-2 2h-.09a1.65 1.65 0 00-1.51 1z" stroke="black" strokeWidth="2"/></>, className: "w-9 h-9", specialClass: "mt-1" }
  ];

  return (
    <>
      <div className="z-50 sticky bottom-0 mt-px w-full grid grid-cols-5 gap-2 border-t border-gray-300 p-2 px-4 justify-items-center bg-white shadow-[0_-2px_6px_rgba(0,0,0,0.08)]">
        {navItems.map((item, index) => (
          <motion.div
            key={item.href}
            whileTap={{ scale: 0.95 }}
            whileHover={{ scale: 1.05 }}
            transition={{ duration: 0.1 }}
          >
            <a
              href={item.href}
              onClick={(e) => handleNavigation(e, item.href)}
              className={`flex flex-col items-center ${item.specialClass || ''} ${isTransitioning ? 'pointer-events-none opacity-50' : 'cursor-pointer'}`}
            >
              {item.icon === "img" ? (
                <img src={item.iconSrc} className={item.className} />
              ) : (
                <svg className={item.className} viewBox={item.href === "/personal-leads" ? "0 0 40 40" : item.href === "/" ? "0 0 36 30" : item.href === "/chats/bidding" ? "0 0 17 24" : "0 0 24 24"} fill="none">
                  {item.svgContent}
                </svg>
              )}
              <span className="text-xs text-black font-medium mt-1">{item.label}</span>
            </a>
          </motion.div>
        ))}
      </div>
    </>
  );
}